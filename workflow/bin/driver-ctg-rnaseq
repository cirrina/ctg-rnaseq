#!/bin/bash

#######################################
# driver for the ctg rnaseq pipeline
#######################################

### This script will
## - 1 - Create project folder used for this run. The project folder will NOT be generated within the runfolder.
## - 2 - Check sample sheet and generate two new ones used for i) demux and ii) downstream analyses and QC
## - 3 - Copy the ctg-rnaseq nextflows scripts to project dir.
## - 4 - Initialize the ctg-rnaseq workflow

## The nextflow worklow will ....

## Develiopment possibilities / known issues
# - since the create samples sheet Rscripts are run in the driver, not in the nf workflow, strandness is not yet included in the ctg samplesheet


# Initialize variables asdsadasd adfdsf
execdir=$(pwd)
#runfolderdir=''
#runfolder='' # runfolder will be set to execfolder if demux is true. It is possible to execute scriipt outside illumina runfolder if demux is FALSE
# usage message
usage() {
    echo ""
    echo ""
    echo "usage: prime-ctg-rnaseq [ -i projectid ] [ -s samplesheet ] [ -l force_lane ] [ -l force_replace_index ] [ -h help ] "  1>&2
    echo ""
    echo "------------------- "
    echo " arguments : "
    echo "------------------- "
    echo " project_id         -i : Define 'project id'. Typically 202X-XXX. This MUST MATCH the project folder that you are in. The script use the rpojec t id to check the integrity of files - and that the project specific nf params file is present "
    echo ""
    echo ""
}

exit_abnormal() {
    usage
    exit 1
}

# Read and control input arguments
while getopts ":i:h" opt; do
    case $opt in
      i) id=$OPTARG
	     ;;
      h) exit_abnormal
        ;;
      \?) echo echo ""; echo "Error:";"Invalid option -$OPTARG" >&2
        exit_abnormal ;;
      :) echo ""; echo "Error:"; echo " -${OPTARG} requires an argument!"
	     exit_abnormal ;;
    esac
done

## check  projct id input
if [ -z $id ]; then
  echo ""; echo "Error: "
  echo "Specify Project id ('-i' flag)"; echo""
  exit_abnormal
fi

################################################
# Define variables based on input arguments
################################################

projectdir=${execdir}
# logfile="${logfolder}/$id.log"
projectfolder=$(basename ${execdir})
nf_conf="${projectdir}/nextflow.params.${id}.config"

if [ ${id} != ${projectfolder} ]; then
  echo "Error: Project id (flag '-i') must be same as execution dir. the script must be initiated within the proect folder "
  echo""; exit_abnormal
fi

## Check arguments
shift "$(( OPTIND -1 ))"





## Check force_lane !! NOT WORKING (Rscript will test this. ..)
# allowed_lane=('0' '1' '2')
# if [[ " "${allowed_lane[@]}" " != *" "$force_lane" "* ]] ;then
#     #echo "$assay: ok"
# # else
#     echo ""
#     echo "Failed check for '-l' flag. "
#     echo "$force_lane: not recognized. Valid names are:"
#     echo "${allowed_lane[@]/%/,}"; echo ""; echo ""
#     exit 1
# fi



# if resume - set overwrite to TRUE
if [ "$resume" == true ]; then
  overwrite=true
  # echo "   Resume set TRUE. Overwrite forced to TRUE."
fi

## Check if project (folder) exists from before. If so overwrite has to be set true with -x flag
if [ -d ${projectdir} ] && [ "$overwrite" != true ]; then
  echo ""; echo "Error:"
  echo "Project id '${id}' is laready in use: "
  echo "Directory '${projectdir}' exists."
  echo "Please chose another project id OR use flag -x to allow overwrite."; echo ""; echo ""
  exit_abnormal
  # echo "'${projectdir}' already exists. Overwriting this folder."
fi
if [ -d ${projectdir} ] && [ "$overwrite" == true ]; then
  echo ""
  echo " Directory '${projectdir}' exists."
  echo "   Overwrite is set to TRUE. Will overrite data in directory. "
  echo ""
  # echo "'${projectdir}' already exists. Overwriting this folder."
fi

## Check Sample Sheet. if file is present in work directory.
if [ -z $sheet ]; then
  echo ""; echo "Error:"
  echo "Specify sample sheet (in current dir): '-s' flag. "; echo ""
  exit_abnormal
  # sheet="CTG_SampleSheet.csv"
  # echo "- Using 'CTG_SampleSheet.csv'"
fi
if [ ! -f $sheet ]; then
  echo ""; echo "Error:"
  echo "Sample Sheet does not exist (in current dir)"
  #echo "- Please specify correct samplesheet, or create a CTG_SampleSheet.csv in current runfolder"
  exit_abnormal
fi

## if a custom sheet is set to true - set demux to FALSE
if [ "$sheet_custom" == true ]; then
  demux=false
fi


#
##############
# Print info #
##############
echo ""
echo "Driver execution parameters "
echo "----------------------------"
echo "Project ID            : $id";
echo "Driver Execution dir  : $execdir";
echo "Overwrite             : $overwrite";
echo "";
echo "Sample Sheet          : $sheet";
echo "Custom Sheet          : $sheet_custom";
echo "";
echo "Libprep assay         : $assay";
echo "";
echo "Demux specific: "
echo "Demux                 : $demux";
echo "Runfolder             : $runfolder";
echo "Runfolder Path        : $runfolderdir";
echo "Fastq output          : $fastqdir";
echo "Pooled (with other)   : $pooled";
echo "Force Lane            : $force_lane";
echo "";
echo "BNF specific: "
echo "Nextflow exec. dir    : $projectdir";
echo "Align data            : $aligned";
echo "Species               : $species";
echo "Paired                : $paired";
echo "";
echo "";
echo "Log file              : $logfile";
echo "";
echo "";
echo "Project output dir    : $projectdir";
echo "Project delivery dir  : ";
echo "";
echo "";

# Prompt user to approve running in current directory and input
read -p "Warning:
  Can only be run from i) within runfolder or ii) within project folder if using custom samplesheet and no demux
  Are you in the folder in which you want run?
  Are input execution parameters correct?

  (y/n)  ... " prompt
if [[ $prompt != "y" ]]
then
    echo ""; echo "Exiting!! "
    exit 0
fi



###############################
# Set up Project directory
###############################
# Create project dir for nextflow exection
mkdir -p $projectdir
# Copy nextflow script and config to project folder
rsync -av $nfdir $projectdir





#######################################################
# Generate sample sheets using Rscripts
#######################################################


if [ "$sheet_custom" == false ]; then
  samplesheet_demux="${projectdir}/SampleSheet-${id}-demux.csv"
  samplesheet_ctg="${projectdir}/SampleSheet-${id}-ctg.csv"

  ${projectdir}/bin/iem2ctg-samplesheet-demux.R \
      --projectid ${id} \
      --sample_sheet ${sheet} \
      --output_demux_sheet ${samplesheet_demux}  \
      --force_lane ${force_lane}\
      --require_adapter TRUE \
      --output_ctg_sheet ${samplesheet_ctg} \
      --paired ${paired} \
      --fastq_path "${fastqdir}/${id}" \
      --bam_path "${fastqdir}/${id}"
else
  # if custom sample sheet is sipplied - then let this be the samplesheet
  samplesheet_ctg="${execdir}/${sheet}"
  samplesheet_demux=''
fi


# echo "$samplesheet_ctg"
#
#
# ${projectdir}/bin/ctg_sampleSheetCheck.R \
#     --projectid ${id} \
#     --sample_sheet ${sheet} \
#     --output_ctg_sheet ${samplesheet_ctg} \
#     --output_demux_sheet ${samplesheet_demux}  \
#     --iem_format TRUE \
#     --paired ${paired} \
#     --force_lane ${force_lane}\
#     --require_adapter FALSE \
#     --allow_num_prefix FALSE \
#     --bam_suffix "_Aligned.sortedByCoord.out.bam" \



###############################
# Modify the nextflow.config
###############################

# Edit config file
nf_conf="${projectdir}/nextflow.params_${id}.config"

echo ""   > $nf_conf
echo "// ${id}" >> $nf_conf
echo "//  nextflow config file" >> $nf_conf
echo "//  Project specific parameters" >> $nf_conf
echo "//  Adds to and overrides parameters in nextflow.config " >> $nf_conf
echo "params {" >> $nf_conf
echo "  projectid           =  '${id}'                " >> $nf_conf
echo "  custom_samplesheet  =  '${sheet_custom}'        " >> $nf_conf
echo "  samplesheet_ctg     =  '${samplesheet_ctg}'         " >> $nf_conf
echo "  projectdir          =  '${projectdir}'    " >> $nf_conf
echo "  execdir             =  '${execdir}'    " >> $nf_conf
echo "" >> $nf_conf
echo "  demux               =  '${demux}'         " >> $nf_conf

if [[ "$demux" == true ]]; then
  echo "  //  demux specific                        " >> $nf_conf
  echo "  samplesheet_demux   =  '${samplesheet_demux}'       " >> $nf_conf
  echo "  runfolderdir        =  '${runfolderdir}'  " >> $nf_conf
  echo "  fastqdir            =  '${fastdir}'  " >> $nf_conf
  # echo "  fastqdir            =  '${fastqdir}'      " >> $nf_conf
fi
if [[ "$pooled" == true ]]; then
  echo "  pooled               =  '${pooled}'         " >> $nf_conf
fi
if [[ "$paired" == true ]]; then
  echo "  paired               =  '${paired}'         " >> $nf_conf
fi
echo "}"  >> $nf_conf
echo ""   >> $nf_conf


# sed "s/xmetaidx/$id/g" $nf_conf > tmp.txt; mv tmp.txt $proj_conf
# sed "s/xrunfolderx/$run/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
# if [ ! -z $custom_genome ]; then
#     sed "s/xcustomgenomex/$custom_genome/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
# fi
# if [ $demux == "ON" ];then
#     sed "s/xdemuxx/y/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
# else
#     sed "s/xdemuxx/n/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
# fi

# Copy edited config to runfolder
# cp $proj_conf $runfolder
# # Copy samplesheet to project folder (ctg-projects..)
# cp $sheet $projdir



# #############################
#  Initiate Nextflow Pipeline
# #############################
if [ "$resume" == true ]; then
    nohup nextflow run $nf_pipe -c $nf_conf -profile $assay $species -resume > nf.log.ctg-rnaseq &
else
    #  nohup nextflow run $nf_pipe -c $nf_conf -profile $assay $species > nf.log.ctg-rnaseq &
    nextflow run $nf_pipe -c $nf_conf -profile $assay $species
    echo "nextflow run $nf_pipe -c $nf_conf -profile $assay $species"
fi
echo ""; echo ""
echo "#################################"
echo "# rnaseq pipeline submitted #"
echo "#################################"
echo ""; echo "";
#
# ##################
# # ctg-interop-qc #
# ##################
# # Will do interop analysis on runfolder, and compile multiqc report.
# # This is written to
# # 1. runfolder/ctg-interop
# # 2. ctg-qc/interop
# ctg-interop-qc
